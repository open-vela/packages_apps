<template>
  <div class="w-full h-full bg-black flex-col" id="root">
    <image
      id="back"
      class="absolute w-42 h-42 left-30 top-19"
      src="../../common/images/back.png"
      onclick="back"
    ></image>
    <div class="absolute top-268 left-60 w-229 h-162 flex-col" id="cur_time_box">
      <text class="fs-80 fw-500 color-white">08:30</text>
      <text class="fs-42 h-56 text-color">12/19 Âë®‰∫å</text>
    </div>
    <div class="absolute bottom-42 left-85 w-630 h-100 items-center justify-between" id="btnBox">
      <text
        class="w-300 h-100 rounded-20 fs-30 color-black text-center bg-velaGrey"
        @click="onPreview"
      >
        È¢ÑËßà
      </text>
    </div>
  </div>
</template>

<script>
/**
 * @description screenSaver.ux
 */
import router from "@system.router"
import exchange from "@common/js/exchange"

import {SAVE_SCREEN, SCREENID} from "../../common/js/constants"

export default {
  private: {
    img: "",
    text: "ËÆæ‰∏∫Â±è‰øù"
  },
  /**
   * @description onInit
   */
  async onInit() {
    try {
      this.img = this.$app.$def.bigThumbnailInfo[0]
      console.log("üöÄ ~ file: screenSaver.ux:49 ~ onInit ~ this.img:", this.img)
      let screenId = await exchange.get({key: SAVE_SCREEN, scope: "global"})
      this.$app.$def.isScreensaver = screenId && screenId.value == SCREENID
      this.text = this.$app.$def.isScreensaver ? "Â∑≤ËÆæ‰∏∫Â±è‰øù" : "ËÆæ‰∏∫Â±è‰øù"
      console.log(
        "###album üöÄ screenSaver.ux onInit### isScreensaver:",
        this.$app.$def.isScreensaver
      )
    } catch (e) {}
  },
  /**
   * @description onReady
   */
  async onReady() {
    try {
      const root = this.$dom.getElementById("root")
      const back = this.$dom.getElementById("back")
      const btnBox = this.$dom.getElementById("btnBox")
      let bgcolor = this.$app.$def.isScreensaver ? "bg-velaGreya" : "bg-customBlue"
      let textColor = this.$app.$def.isScreensaver ? "color-velaWhitea" : "color-white"
      const saveBtn = this.$dom.createElement(root, "text", {
        id: `save-btn`,
        classList: ["w-300", "h-100", "rounded-20", "fs-30", textColor, "text-center", bgcolor],
        value: this.text,
        onclick: (e) => {
          this.onSaveAs(e)
        }
      })
      this.$dom.appendChild(btnBox, saveBtn)
      const imageItem = this.$dom.createElement(root, "image", {
        id: `img`,
        classList: ["w-800", "h-480", "image-cover"],
        alt: "/common/images/default.png",
        src: this.img.imgUrl || ''
      })
      this.$dom.insertBefore(root, imageItem, back)
    } catch (e) {
      console.info("üöÄ ~ file: screenSaver.ux onInit### error: ", e)
    }
  },
  /**
   * @description updateText
   */
  updateText() {
    this.text = this.$app.$def.isScreensaver ? "Â∑≤ËÆæ‰∏∫Â±è‰øù" : "ËÆæ‰∏∫Â±è‰øù"
    let bgcolor = this.$app.$def.isScreensaver ? "bg-velaGreya" : "bg-customBlue"
    let textColor = this.$app.$def.isScreensaver ? "color-velaWhitea" : "color-white"
    const saveBtn = this.$dom.getElementById("save-btn")
    this.$dom.setAttribute(saveBtn, "value", this.text)
    this.$dom.setAttribute(saveBtn, "classList", [
      "w-300",
      "h-100",
      "rounded-20",
      "fs-30",
      textColor,
      "text-center",
      bgcolor
    ])
  },
  /**
   * @description onSaveAs
   */
  async onSaveAs() {
    try {
      if (this.$app.$def.isScreensaver) return
      await exchange.set({key: SAVE_SCREEN, value: SCREENID, scope: "global"})
      this.$app.$def.isScreensaver = true
      this.updateText()
    } catch (e) {
      console.log("üöÄ ~ file: screenSaver.ux:94 ~ onSaveAs ~ error:", e)
    }
  },
  /**
   * @description back
   */
  back() {
    router.back()
  },
  /**
   * @description onPreview
   */
  onPreview() {
    router.push({
      uri: "hap://app/com.application.x4b.lockscreen/pages/home"
    })
  }
}
</script>
<style>
.text-color {
  color: rgba(255, 255, 255, 0.6);
}
.image-cover {
  object-fit: cover;
}
</style>